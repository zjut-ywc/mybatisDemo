<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zjutywc.inter.IUserOperation">
	<select id="selectUsers" parameterType="String" resultMap="resultListUser">
		select * from user where userName like #{userName}
	</select>

	<resultMap type="User" id="resultListUser">
		<id column="id" property="id" />
		<result column="userName" property="userName" />
		<result column="userAge" property="userAge" />
		<result column="userAddress" property="userAddress" />
	</resultMap>

	<select id="selectUserByID" parameterType="int" resultType="User">
		select * from user where id = #{id}
	</select>
	
	<!--执行增加操作的SQL语句。id和parameterType分别与IUserOperation接口中的addUser方法的名字和参数类型一致。seGeneratedKeys设置  
       为"true"表明要MyBatis获取由数据库自动生成的主键；keyProperty="id"指定把获取到的主键值注入到Student的id属性--> 
	<insert id="addUser" parameterType="User" useGeneratedKeys="true" keyProperty="id">
		insert into user(userName,userAge,userAddress) 
			values(#{userName},#{userAge},#{userAddress})
	</insert>
	
	<update id="updateUser" parameterType="User"> 
		update user set userName=#{userName},userAge=#{userAge},userAddress=#{userAddress} where id=#{id}
	</update>
	
	<delete id="deleteUser" parameterType="int">
		delete from user where id = #{id}
	</delete>
	
	
	<resultMap type="Article" id="resultUserArticleList">
		<id column="aid" property="id" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<association property="user" javaType="User">
			<id column="uid" property="id" />
			<result column="userName" property="userName" />
			<result column="userAge" property="userAge" />
			<result column="userAddress" property="userAddress" />
		</association>
		<!-- <association property="user" javaType="User" resultMap="resultListUser" /> -->
	</resultMap>
	
	<!-- 级联查询的时候，主表和从表有一样的字段名的时候，在mysql上命令查询是没问题的。但在mybatis中主从表需要为相同字段名设置别名。 -->
	<select id="getUserArticles" parameterType="int" resultMap="resultUserArticleList">
		select user.id uid,user.userName,user.userAge,user.userAddress,article.id aid,article.title,article.content
		from user,article where user.id=article.userid and article.userid=#{id}
	</select>
</mapper>